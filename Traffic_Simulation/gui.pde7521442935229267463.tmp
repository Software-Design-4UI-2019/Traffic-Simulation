/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void speedLimitSliderChanged(GSlider source, GEvent event) { //_CODE_:speedLimitSlider:930268:
} //_CODE_:speedLimitSlider:930268:

public void pauseButtonClicked(GButton source, GEvent event) { //_CODE_:pauseButton:758401:
  paused = !paused;
} //_CODE_:pauseButton:758401:

public void aggressionSliderChanged(GSlider source, GEvent event) { //_CODE_:aggressionSlider:318674:
} //_CODE_:aggressionSlider:318674:

public void spawnRateSliderChanged(GSlider source, GEvent event) { //_CODE_:spawnRateSlider:743526:
} //_CODE_:spawnRateSlider:743526:

public void resetButtonClicked(GButton source, GEvent event) { //_CODE_:resetButton:719661:
  clearCars();
  draw();
} //_CODE_:resetButton:719661:

public void speedChangeRateSliderCHanged(GSlider source, GEvent event) { //_CODE_:speedChangeRateSlider:297397:

} //_CODE_:speedChangeRateSlider:297397:

public void numLanesChanged(GTextField source, GEvent event) { //_CODE_:numberOfLanes:820175:

} //_CODE_:numberOfLanes:820175:

public void couldChangeLanesSliderChanged(GSlider source, GEvent event) { //_CODE_:couldChangeLanesSlider:321941:

} //_CODE_:couldChangeLanesSlider:321941:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Trafficient");
  speedLimitSlider = new GSlider(this, 230, 30, 100, 60, 10.0);
  speedLimitSlider.setShowValue(true);
  speedLimitSlider.setShowLimits(true);
  speedLimitSlider.setLimits(70, 20, 120);
  speedLimitSlider.setNbrTicks(11);
  speedLimitSlider.setStickToTicks(true);
  speedLimitSlider.setNumberFormat(G4P.INTEGER, 0);
  speedLimitSlider.setOpaque(true);
  speedLimitSlider.addEventHandler(this, "speedLimitSliderChanged");
  speedLimit = new GLabel(this, 230, 10, 100, 20);
  speedLimit.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  speedLimit.setText("Speed Limit");
  speedLimit.setTextBold();
  speedLimit.setOpaque(true);
  pauseButton = new GButton(this, 10, 10, 80, 40);
  pauseButton.setText("Pause");
  pauseButton.setTextBold();
  pauseButton.setLocalColorScheme(GCScheme.GOLD_SCHEME);
  pauseButton.addEventHandler(this, "pauseButtonClicked");
  aggression = new GLabel(this, 360, 10, 100, 20);
  aggression.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  aggression.setText("Aggression");
  aggression.setTextBold();
  aggression.setLocalColorScheme(GCScheme.RED_SCHEME);
  aggression.setOpaque(true);
  aggressionSlider = new GSlider(this, 360, 30, 100, 60, 10.0);
  aggressionSlider.setShowValue(true);
  aggressionSlider.setShowLimits(true);
  aggressionSlider.setLimits(1.0, 0.5, 1.5);
  aggressionSlider.setNbrTicks(3);
  aggressionSlider.setShowTicks(true);
  aggressionSlider.setNumberFormat(G4P.DECIMAL, 0);
  aggressionSlider.setLocalColorScheme(GCScheme.RED_SCHEME);
  aggressionSlider.setOpaque(true);
  aggressionSlider.addEventHandler(this, "aggressionSliderChanged");
  trafficDensity = new GLabel(this, 490, 10, 110, 20);
  trafficDensity.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  trafficDensity.setText("Traffic Density");
  trafficDensity.setTextBold();
  trafficDensity.setLocalColorScheme(GCScheme.PURPLE_SCHEME);
  trafficDensity.setOpaque(true);
  spawnRateSlider = new GSlider(this, 490, 30, 110, 60, 10.0);
  spawnRateSlider.setShowValue(true);
  spawnRateSlider.setShowLimits(true);
  spawnRateSlider.setLimits(3, 1, 5);
  spawnRateSlider.setNbrTicks(5);
  spawnRateSlider.setStickToTicks(true);
  spawnRateSlider.setNumberFormat(G4P.INTEGER, 0);
  spawnRateSlider.setLocalColorScheme(GCScheme.PURPLE_SCHEME);
  spawnRateSlider.setOpaque(true);
  spawnRateSlider.addEventHandler(this, "spawnRateSliderChanged");
  resetButton = new GButton(this, 120, 10, 80, 40);
  resetButton.setText("Reset");
  resetButton.setTextBold();
  resetButton.setLocalColorScheme(GCScheme.ORANGE_SCHEME);
  resetButton.addEventHandler(this, "resetButtonClicked");
  speedChangeRateSlider = new GSlider(this, 630, 30, 140, 60, 10.0);
  speedChangeRateSlider.setShowValue(true);
  speedChangeRateSlider.setShowLimits(true);
  speedChangeRateSlider.setLimits(6, 0, 10);
  speedChangeRateSlider.setShowTicks(true);
  speedChangeRateSlider.setNumberFormat(G4P.INTEGER, 0);
  speedChangeRateSlider.setLocalColorScheme(GCScheme.YELLOW_SCHEME);
  speedChangeRateSlider.setOpaque(true);
  speedChangeRateSlider.addEventHandler(this, "speedChangeRateSliderCHanged");
  speedChangeRate = new GLabel(this, 630, 10, 140, 20);
  speedChangeRate.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  speedChangeRate.setText("Speed Change Rate");
  speedChangeRate.setTextBold();
  speedChangeRate.setLocalColorScheme(GCScheme.YELLOW_SCHEME);
  speedChangeRate.setOpaque(true);
  numberOfLanes = new GTextField(this, 980, 30, 110, 20, G4P.SCROLLBARS_NONE);
  numberOfLanes.setText("3");
  numberOfLanes.setPromptText("Number of Lanes");
  numberOfLanes.setLocalColorScheme(GCScheme.ORANGE_SCHEME);
  numberOfLanes.setOpaque(true);
  numberOfLanes.addEventHandler(this, "numLanesChanged");
  lanesL = new GLabel(this, 980, 10, 110, 20);
  lanesL.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  lanesL.setText("Lanes");
  lanesL.setTextBold();
  lanesL.setLocalColorScheme(GCScheme.ORANGE_SCHEME);
  lanesL.setOpaque(true);
  label3 = new GLabel(this, 800, 10, 150, 20);
  label3.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label3.setText("Lane Change Chance");
  label3.setTextBold();
  label3.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  label3.setOpaque(true);
  couldChangeLanesSlider = new GSlider(this, 800, 30, 150, 60, 10.0);
  couldChangeLanesSlider.setShowValue(true);
  couldChangeLanesSlider.setShowLimits(true);
  couldChangeLanesSlider.setLimits(20, 0, 100);
  couldChangeLanesSlider.setShowTicks(true);
  couldChangeLanesSlider.setNumberFormat(G4P.INTEGER, 0);
  couldChangeLanesSlider.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  couldChangeLanesSlider.setOpaque(true);
  couldChangeLanesSlider.addEventHandler(this, "couldChangeLanesSliderChanged");
}

// Variable declarations 
// autogenerated do not edit
GSlider speedLimitSlider; 
GLabel speedLimit; 
GButton pauseButton; 
GLabel aggression; 
GSlider aggressionSlider; 
GLabel trafficDensity; 
GSlider spawnRateSlider; 
GButton resetButton; 
GSlider speedChangeRateSlider; 
GLabel speedChangeRate; 
GTextField numberOfLanes; 
GLabel lanesL; 
GLabel label3; 
GSlider couldChangeLanesSlider; 
